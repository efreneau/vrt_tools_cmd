
.. _program_listing_file__home_emil_vrt_tools_cmd_print_src_stringify.cpp:

Program Listing for File stringify.cpp
======================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_emil_vrt_tools_cmd_print_src_stringify.cpp>` (``/home/emil/vrt_tools_cmd/print/src/stringify.cpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #include "stringify.h"
   
   #include <iomanip>
   #include <iostream>
   
   namespace vrt::print {
   
   std::string Uint32ToHexStr(uint32_t v, int symbols) {
       std::stringstream ss;
       ss << "0x" << std::hex << std::setw(symbols) << std::setfill('0') << std::uppercase << v;
       return ss.str();
   }
   
   void WriteCols(const std::string& name, const std::string& value, unsigned indentation_level) {
       // Number of spaces per indentation level
       const int INDENTATION_SPACES{2};
   
       // Total width in command line characters
       const int TOTAL_WIDTH{80};
   
       std::string indented_name{std::string(INDENTATION_SPACES * indentation_level, ' ') + name};
       int         width_left{static_cast<int>(indented_name.size())};
       int         width_right{static_cast<int>(TOTAL_WIDTH - width_left)};
       std::cout << std::left << std::setw(width_left) << indented_name << std::right << std::setw(width_right) << value
                 << "\n";
   }
   
   }  // namespace vrt::print
